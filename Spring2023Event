import sys
import math

# Auto-generated code below aims at helping you parse
# the standard input according to the problem statement.
my_base_index =[]
opp_base_index =[]
number_of_cells = int(input())  # amount of hexagonal cells in this map
ct =[]
for i in range(number_of_cells):
    # _type: 0 for empty, 1 for eggs, 2 for crystal
    # initial_resources: the initial amount of eggs/crystals on this cell
    # neigh_0: the index of the neighbouring cell for each direction
    _type, initial_resources, neigh_0, neigh_1, neigh_2, neigh_3, neigh_4, neigh_5 = [int(j) for j in input().split()]
    ct.append((_type,i))
    
print(ct, file=sys.stderr, flush=True)

number_of_bases = int(input())

for i in input().split():
    my_base_index.append(int(i))

for i in input().split():
    opp_base_index.append(int(i))


# game loop


resources, my_ants, opp_ants =0,0,0
round = 0
while True:
    cells = []    

    for i in range(number_of_cells):
        # resources: the current amount of eggs/crystals on this cell
        # my_ants: the amount of your ants on this cell
        # opp_ants: the amount of opponent ants on this cell
        resources, my_ants, opp_ants = [int(j) for j in input().split()]
        if resources >0:
            cells.append((ct[i][0],resources,i))
        
    sc = sorted(cells)[::-1]
    # print("my_ants = ", my_ants, file=sys.stderr, flush=True)
    print("sc = ", sc, file=sys.stderr, flush=True)

    
    # Write an action using print
    # To debug: print("Debug messages...", file=sys.stderr, flush=True)

    ol = ""
    ob = ""
    
    for i in range(len(cells)):
        #print(f"BEACON {sc[i][1]} {1}; LINE {my_base_index[0]} {sc[i][1]} {1};")
        #print(f"BEACON {sc[i][1]} {100}")
        #print("r, sc[i][0] = ", round, sc[i][0], file=sys.stderr, flush=True)
        if round<4:
            if sc[i][0]==1:
                ol+=f"LINE {my_base_index[0]} {sc[i][2]} {my_ants};"
            else:                        
                #ol+=f"LINE {my_base_index[0]} {sc[i][2]} {1};"
                ob+=f"BEACON {sc[i][2]} {0};" 
        else:
            ol+=f"LINE {my_base_index[0]} {sc[i][2]} {1};"
            # ob+=f"BEACON {sc[i][2]} {0};" 

    print(ol+ob)
    round+=1
    # WAIT | LINE <sourceIdx> <targetIdx> <strength> | BEACON <cellIdx> <strength> | MESSAGE <text>
    #print(f"BEACON {sc[0][1]} {my_ants};")
    
